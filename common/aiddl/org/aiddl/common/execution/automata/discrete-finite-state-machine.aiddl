(#mod self org.aiddl.common.execution.automata.discrete-finite-state-machine)

(#req FL org.aiddl.common.reasoning.logic.first-order)

(#req EVAL org.aiddl.eval.namespace)

(#nms nms-basic basic-ops@EVAL)
(#nms nms-col collection-ops@EVAL)
(#nms nms-logic logic-ops@EVAL)
(#nms nms-type   type-ops@EVAL)
(#nms nms-numerical   numerical-ops@EVAL)

(#type State (union {^symbolic ^Atom@FL}))
(#type Event (union {^symbolic ^Atom@FL}))

(#type States (set-of ^$State))
(#type Events (set-of ^$Event))

(#type Transition  (typed-kvp (sig [^$State ^$Event]):^$State))
(#type Transitions (set-of ^$Transition
                              constraint:(lambda ?X
                                           (forall ?k:?v1 ?X
                                             (not (exists ?k:?v2 ?X
                                               (!= ?v1 ?v2)))))))

(#type DFSM (sig [^$States ^$Events ^$Transitions ^$State ^$States]
  constraint:(lambda ?X 
    (match (?Q ?E ?D ?q0 ?F) ?X
      (and
        (forall (?s ?e) : ?s_next, ?D
          (and
            (in ?s ?Q)
            (in ?e ?E)
            (in ?s_next ?Q)))
        (forall ?s ?F (in ?s ?Q))
        (in ?q0 ?Q)
      )))))

