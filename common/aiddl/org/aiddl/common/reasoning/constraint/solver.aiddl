(#mod self org.aiddl.common.reasoning.constraint.solver)

(#nms EVAL "eval.aiddl")

(#req R "request.aiddl")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Services
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(Services@R service-configs [
  ( name    : select-var
    service : org.aiddl.common.reasoning.constraint.VariableOrdering )
  ( name    : value-ordering
    service : org.aiddl.common.reasoning.constraint.ValueOrdering )
  ( name    : test-constraints
    service : org.aiddl.common.reasoning.constraint.ConstraintChecker
    config  : [ verbose:1 logger-name:ConTest ] )
  ( name    : search
    service : org.aiddl.common.search.TreeSearch
    config  : [ verbose:1 logger-name:Search ] )    
  ])

(Request@R (solve ?csp)
  (while (and (!= $a NIL) (> (size $x $a)))
    [
      (call var-order (?csp $a) x)
      (call val-order (?csp $x $a) exp)
      (call search (expand $exp) a)
      (call test-cons (?csp $a) sat)
      (if (not $sat)
        (call search (next) a)
      )
    ]
  )
)
  
  