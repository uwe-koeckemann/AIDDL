(#mod self org.logic.test-cases)

(#namespace EVAL org.aiddl.eval)

(#req FL org.aiddl.common.reasoning.logic.first-order)
(#req PL org.aiddl.common.reasoning.logic.propositional)

(#assert t1
  (has-type
      (f a b) ^Atom@FL))

(#assert t-set-list
  (not (has-type
      (f a [1 2 3] {a b c}) ^Atom@FL)))

(#symbolic e1 f)

(#assert t3
  (has-type
      (e1@self ?X 1 12.3) ^Atom@FL))

(#variable e2 ?X)

(#assert t4
  (not (has-type
      (e2@self ?X 1 12.3) ^Atom@FL)))

(#assert t5
  (has-type
      (f a (g b)) ^Atom@FL))

(#assert t-set
  (not (has-type
      (f {}) ^Atom@FL)))

(#assert t-list
  (not (has-type
      (f []) ^Atom@FL)))

(#assert t7
  (not (has-type
      ((f x) a b) ^Atom@FL)))

(#assert t8
  (not (has-type
      (?f a b) ^Atom@FL)))

(#assert t9
  (not (has-type
      (2 a b) ^Atom@FL)))

(#assert t10
  (not (has-type
      (2.5 a b) ^Atom@FL)))

(#assert t12
  (has-type
      (p) ^Atom@FL))

(#assert t13
  (not (has-type
      [s a b] ^Atom@FL)))

(#assert t14
  (not (has-type
      {s a b} ^Atom@FL)))

(#assert t15
  (not (has-type  
      (() a b) ^Atom@FL)))


		







