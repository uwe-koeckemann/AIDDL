digraph {
    n1 [label="start",style=filled,fillcolor=crimson,shape=Mdiamond];
    n2 [label="(write false success)",style=filled,fillcolor=gold,shape=box];
    n3 [label="get-ground-operators@run-module",style=filled,fillcolor=gold,shape=box];
    n4 [label="create-cg@run-module",style=filled,fillcolor=gold,shape=box];
    n5 [label="create-dtgs@run-module",style=filled,fillcolor=gold,shape=box];
    n6 [label="(init goal-test@run-module _)",style=filled,fillcolor=gold,shape=box];
    n7 [label="(init expand@run-module A@run-module)",style=filled,fillcolor=gold,shape=box];
    n8 [label="(init compute-h_cg@run-module (causal-graph:CG@run-module domain-transition-graphs:DTGs@run-module goal:_))",style=filled,fillcolor=gold,shape=box];
    n9 [label="(init compute-h_ff@run-module (operators:_ initial-state:_ goal:_))",style=filled,fillcolor=gold,shape=box];
    n10 [label="(init graph-search@run-module [_] {})",style=filled,fillcolor=gold,shape=box];
    n11 [label="(stopwatch start \"Main Loop\")",style=filled,fillcolor=gold,shape=box];
    n12 [label="(while (#and (#not success@run-module) (#not queue-empty@run-module)))",style=filled,fillcolor=darkorange,shape=hexagon];
  subgraph cluster_0 {
    style=filled;
    color=lightblue1;
      n13 [label="graph-search@run-module",style=filled,fillcolor=gold,shape=box];
      n14 [label="graph-search@run-module",style=filled,fillcolor=gold,shape=box];
      n15 [label="graph-search@run-module",style=filled,fillcolor=gold,shape=box];
      n16 [label="(print \"Queue Size\" queue-size@run-module)",style=filled,fillcolor=gold,shape=box];
      n17 [label="(if (#equals queue-size@run-module 0))",style=filled,fillcolor=deepskyblue,shape=diamond];
      n18 [label="(write true queue-empty)",style=filled,fillcolor=gold,shape=box];
  }
    n19 [label="(stopwatch stop \"Main Loop\")",style=filled,fillcolor=gold,shape=box];
    n20 [label="(print \"PLAN EXISTS?\" success@run-module)",style=filled,fillcolor=gold,shape=box];
    n21 [label="(if success@run-module)",style=filled,fillcolor=deepskyblue,shape=diamond];
    n22 [label="graph-search@run-module",style=filled,fillcolor=gold,shape=box];
    n23 [label="(print Plan pi@run-module)",style=filled,fillcolor=gold,shape=box];
    n24 [label="(print \"Opened\" (graph-search@run-module get n-opened))",style=filled,fillcolor=gold,shape=box];
    n25 [label="(print \"Added\" (graph-search@run-module get n-added))",style=filled,fillcolor=gold,shape=box];
    n26 [label="(print \"Pruned\" (graph-search@run-module get n-pruned))",style=filled,fillcolor=gold,shape=box];
    n27 [label="end",style=filled,fillcolor=crimson,shape=Msquare];
  n15 -> n16 [label="next"];
  n7 -> n8 [label="next"];
  n23 -> n24 [label="next"];
  n26 -> n27 [label="next"];
  n8 -> n9 [label="next"];
  n13 -> n14 [label="next"];
  n20 -> n21 [label="next"];
  n10 -> n11 [label="next"];
  n16 -> n17 [label="next"];
  n5 -> n6 [label="next"];
  n12 -> n19 [label="next"];
  n12 -> n13 [label="do"];
  n4 -> n5 [label="next"];
  n19 -> n20 [label="next"];
  n21 -> n27 [label="next"];
  n21 -> n22 [label="true"];
  n3 -> n4 [label="next"];
  n11 -> n12 [label="next"];
  n17 -> n18 [label="true"];
  n17 -> n12 [label="loop-back"];
  n1 -> n2 [label="next"];
  n24 -> n25 [label="next"];
  n22 -> n23 [label="next"];
  n9 -> n10 [label="next"];
  n18 -> n12 [label="loop-back"];
  n2 -> n3 [label="next"];
  n14 -> n15 [label="next"];
  n25 -> n26 [label="next"];
  n6 -> n7 [label="next"];
}